# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Bult & Deploy

on:
  push:
    tags:
      - "v*"

env:
  DOCKER_LOGIN: simple2b
  IMAGE_NAME: simple2b/llm-chat
  DEPLOY_HOST: ${{ secrets.DEVELOP_HOST }}
  DEPLOY_USER_NAME: ${{ secrets.DEVELOP_USERNAME }}
  DEPLOY_SSH_KEY: ${{ secrets.DEVELOP_SSH_KEY }}
  DEPLOY_WORK_DIR: ${{ secrets.DEVELOP_WORK_DIR }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build:
    runs-on: Linux
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and Push app image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
      - name: update compose file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          source: docker-compose.dev.yaml
          target: ${{ env.DEPLOY_WORK_DIR }}
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ env.DEPLOY_WORK_DIR }} &&
            mv docker-compose.dev.yaml docker-compose.yaml &&
            docker-compose pull &&
            docker-compose up -d &&
            docker system prune -f
